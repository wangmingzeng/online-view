<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="  
        http://www.springframework.org/schema/beans       
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
        http://www.springframework.org/schema/context   
        http://www.springframework.org/schema/context/spring-context-3.0.xsd  
        http://www.springframework.org/schema/mvc  
        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

	<!-- 读取context.properties文件 -->
	<bean id="propertyPlaceholderConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<!-- 指定properties文件所在路径 -->
		<property name="location" value="classpath:context.properties"></property>
	</bean>

	<!-- 数据源配置,使用druid数据库连接池     -->
<!--    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"  init-method="init" destroy-method="close">-->
<!--        <property name="driverClassName" value="${jdbc.driver}" />-->
<!--        <property name="url" value="${jdbc.url}" />-->
<!--        <property name="username" value="${jdbc.username}" />-->
<!--        <property name="password" value="${jdbc.password}" />-->
<!--    </bean>-->

	<!-- 配置扫描保存sql语句的局部xml文件 -->
<!--	<bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">-->
<!--		<property name="dataSource" ref="dataSource"></property>-->
<!--		<property name="mapperLocations" value="classpath:mapper/*.xml"></property>-->
<!--		<property name="plugins">-->
<!--			<array>-->
<!--				<bean class="com.github.pagehelper.PageInterceptor">-->
<!--					<property name="properties">-->
<!--						&lt;!&ndash;使用下面的方式配置参数，一行配置一个 &ndash;&gt;-->
<!--						<value>-->
<!--							offsetAsPageNum=true-->
<!--							rowBoundsWithCount=true-->
<!--							reasonable=true-->
<!--							helperDialect=mysql-->
<!--							params=count=countSql-->
<!--						</value>-->
<!--					</property>-->
<!--				</bean>-->
<!--			</array>-->
<!--		</property>-->
<!--	</bean>-->

	<!-- 扫描mapper接口类，并且将接口类与xml文件关联 -->
<!--	<bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">-->
<!--		<property name="basePackage" value="com.zach.biz.view.mapper"/>-->
<!--	</bean>-->

	<!-- 配置事务 -->
	<!-- <bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean> -->
	<!-- 事务注解驱动 -->
	<!-- <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" /> -->

</beans>